# -*- coding: utf-8 -*-
"""json_to_txt.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mH4TlMzw_EWsVvmRADM_7Qg_DuV9yGGh
"""

import sys, os, json, argparse
from tqdm import tqdm

parser = argparse.ArgumentParser(description='Give some info')
parser.add_argument('--imgPath', required=True)
parser.add_argument('--labelPath', required=True)
parser.add_argument('--outputPath', required=True)
parser.add_argument('--multipleDirs', default=False, type=bool)
parser.add_argument('--isTrainD', default=True, type=bool)

args = parser.parse_args()

multiDirs=args.multipleDirs
imgPath=args.imgPath
labelPath=args.labelPath
outputPath=args.outputPath
isTrainD=args.isTrainD

def make_gtFile(imgPath, labelPath, outputPath):
    imgs_=os.listdir(imgPath)
    imgs_=[i for i in imgs_ if i.split('.')[1]=='jpg']
    
    f=open(imgPath+'/gt.txt', 'w', encoding='utf-8')
    for i in tqdm(imgs_):
        js=None
        with open(labelPath+i.split('.')[0]+'.json', 'r', encoding='utf-8') as a:
            js = json.load(a)
        f.write(i+'\t'+js["annotations"][0]["text"]+'\n')
        
    f.close()
    print(imgPath+' gt File convert Finished')
    """
    stream = os.popen('python C:/Users/user/Desktop/deep-text-recognition-benchmark-master/create_lmdb_dataset.py' 
                      +' --inputPath ' + 'C:/Users/user/Desktop/deep-text-recognition-benchmark-master/ai_hub_data/Training/[원천]Training_간판_가로형간판_원천데이터2/' 
                      +' --gtFile ' + 'C:/Users/user/Desktop/deep-text-recognition-benchmark-master/ai_hub_data/Training/[원천]Training_간판_가로형간판_원천데이터2/gt.txt'
                      +' --outputPath ' + 'C:/Users/user/Desktop/deep-text-recognition-benchmark-master/ai_hub_data/txts/가로형2/')
    output = stream.read()
    print(imgPath+' mdb File convert Finished')
    print(output)
    """

imgs=os.listdir(imgPath)
make_gtFile(imgPath, labelPath, outputPath)
"""
if multiDirs:
    dirs=[i for i in imgs if os.path.isdir(os.path.join(imgPath,i))]
    for d in dirs:
        outputPath_=outputPath+'_'+d
        if isTrainD:
            outputPath_+='/Training'
        else:
            outputPath_+='/Validation'
        make_gtFile(imgPath+'/'+d, labelPath+'/'+d, outputPath_)

else:
    make_gtFile(imgPath, labelPath, outputPath)
"""